<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>notes on</title><link>https://kory33.github.io/obsidian-vault--research-notes--optimized-reasoning-with-guarded-logic/tags/notes/</link><description>Recent content in notes on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://kory33.github.io/obsidian-vault--research-notes--optimized-reasoning-with-guarded-logic/tags/notes/index.xml" rel="self" type="application/rss+xml"/><item><title>Preliminary Results on Saturated Chase-Like Trees</title><link>https://kory33.github.io/obsidian-vault--research-notes--optimized-reasoning-with-guarded-logic/notes/Preliminary-Results-on-Saturated-Chase-Like-Trees/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kory33.github.io/obsidian-vault--research-notes--optimized-reasoning-with-guarded-logic/notes/Preliminary-Results-on-Saturated-Chase-Like-Trees/</guid><description>General Definitions surrounding $\SatTree$s Definition. For chase-like tree $T$ and its vertex $v \in T_0$, we say that $v$ mentions a factual term $t$ if $\Instance_T(v)$ contains a fact $P(\vec{t&amp;rsquo;})$ such that $t \in \elems(\vec{t&amp;rsquo;})$.</description></item><item><title>Reducing Query-Rule-Rewriting Problem to BCQ Answerings</title><link>https://kory33.github.io/obsidian-vault--research-notes--optimized-reasoning-with-guarded-logic/notes/Reducing-Query-Rule-Rewriting-Problem-to-BCQ-Answerings/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kory33.github.io/obsidian-vault--research-notes--optimized-reasoning-with-guarded-logic/notes/Reducing-Query-Rule-Rewriting-Problem-to-BCQ-Answerings/</guid><description>We shall build on definitions given in [[Chase-Like Trees and Saturated Chase-Like Trees]]. We will also rely on the results in [[Preliminary Results on Saturated Chase-Like Trees]], and [[Witness Fragmentation and Witness Gluing]].</description></item><item><title>Solving the BCQ Answering</title><link>https://kory33.github.io/obsidian-vault--research-notes--optimized-reasoning-with-guarded-logic/notes/Solving-the-BCQ-Answering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kory33.github.io/obsidian-vault--research-notes--optimized-reasoning-with-guarded-logic/notes/Solving-the-BCQ-Answering/</guid><description>In [[Reducing Query-Rule-Rewriting Problem to BCQ Answerings]], we saw how to reduce the query-rewriting problem to exponentially many, mostly independent subproblems of BCQ answerings.</description></item><item><title>The Dynamic Programming Algorithm</title><link>https://kory33.github.io/obsidian-vault--research-notes--optimized-reasoning-with-guarded-logic/notes/The-Dynamic-Programming-Algorithm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kory33.github.io/obsidian-vault--research-notes--optimized-reasoning-with-guarded-logic/notes/The-Dynamic-Programming-Algorithm/</guid><description>We begin with preliminary notions of hypergraphs.
Definition. Let $\mathcal{H} = (\mathcal{V}\mathcal{H}, \mathcal{E}\mathcal{H})$ be a hypergraph.
For a set $V \subseteq \mathcal{V}_\mathcal{H}$ of vertices, we define</description></item><item><title>Witness Fragmentation and Witness Gluing</title><link>https://kory33.github.io/obsidian-vault--research-notes--optimized-reasoning-with-guarded-logic/notes/Witness-Fragmentation-and-Witness-Gluing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://kory33.github.io/obsidian-vault--research-notes--optimized-reasoning-with-guarded-logic/notes/Witness-Fragmentation-and-Witness-Gluing/</guid><description>This note depends on [[Preliminary Results on Saturated Chase-Like Trees]].
This note explores the relationship between ordinary witnesses and &amp;ldquo;fragmented witnesses&amp;rdquo;, which will be defined in the following sections.</description></item></channel></rss>